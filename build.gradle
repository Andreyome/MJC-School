plugins {
    id 'java-base'
    id "org.sonarqube" version "5.0.0.4638"
}

wrapper {
    gradleVersion = gradlewVersion
}
sonar {
    properties {
        property "sonar.projectKey", "App-test"
        property "sonar.projectName", "App test"
        property "sonar.login", "squ_1a848c723a38d96aa0f04673d0851d7f2990f2fe"  
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.springframework:spring-context:$springVersion"
        testImplementation "org.springframework:spring-test:$springVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:1.0.0"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
        testImplementation "com.tngtech.archunit:archunit:$archUnitVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:1.0.0"
        testImplementation 'org.assertj:assertj-core:3.19.0'
        implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'
        implementation 'org.springframework.boot:spring-boot-starter-web:2.7.7'
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.7.7"
        implementation 'com.h2database:h2:2.1.214'
        implementation 'javax.xml.bind:jaxb-api:2.3.1'
        annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
        implementation "org.mapstruct:mapstruct:$mapstructVersion"
        implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.7.7'

        testImplementation 'io.rest-assured:rest-assured:5.4.0'
        testImplementation 'org.hamcrest:hamcrest:2.2'

        runtimeOnly 'com.h2database:h2'

    }
    test {
        useJUnitPlatform()
    }
}

//task repack(type: Jar, dependsOn: ':module-web:build') {
//    if (findProject(':module-web') != null) {
//        entryCompression = ZipEntryCompression.STORED
//        def buildJar = zipTree("${project(':module-web').buildDir}/libs/module-web.jar")
//        from(buildJar) { into('/') }
//        manifest {
//            attributes(
//                    'Main-Class': 'com.mjc.school.controller'
//            )
//        }
//    }
//}